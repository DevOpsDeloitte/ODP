#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODPTaxonomyDAL_TT
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ODP_Taxonomy_DEV")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_aspnet_User(tbl_aspnet_User instance);
    partial void Updatetbl_aspnet_User(tbl_aspnet_User instance);
    partial void Deletetbl_aspnet_User(tbl_aspnet_User instance);
    partial void Inserttbl_aspnet_UsersInRole(tbl_aspnet_UsersInRole instance);
    partial void Updatetbl_aspnet_UsersInRole(tbl_aspnet_UsersInRole instance);
    partial void Deletetbl_aspnet_UsersInRole(tbl_aspnet_UsersInRole instance);
    partial void Inserttbl_TeamType(tbl_TeamType instance);
    partial void Updatetbl_TeamType(tbl_TeamType instance);
    partial void Deletetbl_TeamType(tbl_TeamType instance);
    partial void Inserttbl_TeamUser(tbl_TeamUser instance);
    partial void Updatetbl_TeamUser(tbl_TeamUser instance);
    partial void Deletetbl_TeamUser(tbl_TeamUser instance);
    partial void Inserttbl_Status(tbl_Status instance);
    partial void Updatetbl_Status(tbl_Status instance);
    partial void Deletetbl_Status(tbl_Status instance);
    partial void Inserttbl_aspnet_Membership(tbl_aspnet_Membership instance);
    partial void Updatetbl_aspnet_Membership(tbl_aspnet_Membership instance);
    partial void Deletetbl_aspnet_Membership(tbl_aspnet_Membership instance);
    partial void Inserttbl_Team(tbl_Team instance);
    partial void Updatetbl_Team(tbl_Team instance);
    partial void Deletetbl_Team(tbl_Team instance);
    partial void Inserttbl_Evaluation(tbl_Evaluation instance);
    partial void Updatetbl_Evaluation(tbl_Evaluation instance);
    partial void Deletetbl_Evaluation(tbl_Evaluation instance);
    partial void Inserttbl_AbstractStatus(tbl_AbstractStatus instance);
    partial void Updatetbl_AbstractStatus(tbl_AbstractStatus instance);
    partial void Deletetbl_AbstractStatus(tbl_AbstractStatus instance);
    partial void Inserttbl_AbstractScan(tbl_AbstractScan instance);
    partial void Updatetbl_AbstractScan(tbl_AbstractScan instance);
    partial void Deletetbl_AbstractScan(tbl_AbstractScan instance);
    partial void Inserttbl_AbstractStatusChangeHistory(tbl_AbstractStatusChangeHistory instance);
    partial void Updatetbl_AbstractStatusChangeHistory(tbl_AbstractStatusChangeHistory instance);
    partial void Deletetbl_AbstractStatusChangeHistory(tbl_AbstractStatusChangeHistory instance);
    partial void Inserttbl_AbstractTopic(tbl_AbstractTopic instance);
    partial void Updatetbl_AbstractTopic(tbl_AbstractTopic instance);
    partial void Deletetbl_AbstractTopic(tbl_AbstractTopic instance);
    partial void Inserttbl_EvaluationType(tbl_EvaluationType instance);
    partial void Updatetbl_EvaluationType(tbl_EvaluationType instance);
    partial void Deletetbl_EvaluationType(tbl_EvaluationType instance);
    partial void Inserttbl_A_StudyFocus(tbl_A_StudyFocus instance);
    partial void Updatetbl_A_StudyFocus(tbl_A_StudyFocus instance);
    partial void Deletetbl_A_StudyFocus(tbl_A_StudyFocus instance);
    partial void InserttbL_Submission(tbL_Submission instance);
    partial void UpdatetbL_Submission(tbL_Submission instance);
    partial void DeletetbL_Submission(tbL_Submission instance);
    partial void Inserttbl_aspnet_Role(tbl_aspnet_Role instance);
    partial void Updatetbl_aspnet_Role(tbl_aspnet_Role instance);
    partial void Deletetbl_aspnet_Role(tbl_aspnet_Role instance);
    partial void Inserttbl_Abstract_Text(tbl_Abstract_Text instance);
    partial void Updatetbl_Abstract_Text(tbl_Abstract_Text instance);
    partial void Deletetbl_Abstract_Text(tbl_Abstract_Text instance);
    partial void Inserttbl_Abstract(tbl_Abstract instance);
    partial void Updatetbl_Abstract(tbl_Abstract instance);
    partial void Deletetbl_Abstract(tbl_Abstract instance);
    #endregion
		
		public DataDataContext() : 
				base(global::ODPTaxonomyDAL_TT.Properties.Settings.Default.ODP_Taxonomy_DEVConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_aspnet_User> tbl_aspnet_Users
		{
			get
			{
				return this.GetTable<tbl_aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<tbl_aspnet_UsersInRole> tbl_aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<tbl_aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TeamType> tbl_TeamTypes
		{
			get
			{
				return this.GetTable<tbl_TeamType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_TeamUser> tbl_TeamUsers
		{
			get
			{
				return this.GetTable<tbl_TeamUser>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Status> tbl_Status
		{
			get
			{
				return this.GetTable<tbl_Status>();
			}
		}
		
		public System.Data.Linq.Table<tbl_aspnet_Membership> tbl_aspnet_Memberships
		{
			get
			{
				return this.GetTable<tbl_aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Team> tbl_Teams
		{
			get
			{
				return this.GetTable<tbl_Team>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Evaluation> tbl_Evaluations
		{
			get
			{
				return this.GetTable<tbl_Evaluation>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AbstractStatus> tbl_AbstractStatus
		{
			get
			{
				return this.GetTable<tbl_AbstractStatus>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AbstractScan> tbl_AbstractScans
		{
			get
			{
				return this.GetTable<tbl_AbstractScan>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AbstractStatusChangeHistory> tbl_AbstractStatusChangeHistories
		{
			get
			{
				return this.GetTable<tbl_AbstractStatusChangeHistory>();
			}
		}
		
		public System.Data.Linq.Table<tbl_AbstractTopic> tbl_AbstractTopics
		{
			get
			{
				return this.GetTable<tbl_AbstractTopic>();
			}
		}
		
		public System.Data.Linq.Table<tbl_EvaluationType> tbl_EvaluationTypes
		{
			get
			{
				return this.GetTable<tbl_EvaluationType>();
			}
		}
		
		public System.Data.Linq.Table<tbl_A_StudyFocus> tbl_A_StudyFocus
		{
			get
			{
				return this.GetTable<tbl_A_StudyFocus>();
			}
		}
		
		public System.Data.Linq.Table<tbL_Submission> tbL_Submissions
		{
			get
			{
				return this.GetTable<tbL_Submission>();
			}
		}
		
		public System.Data.Linq.Table<tbl_aspnet_Role> tbl_aspnet_Roles
		{
			get
			{
				return this.GetTable<tbl_aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Abstract_Text> tbl_Abstract_Texts
		{
			get
			{
				return this.GetTable<tbl_Abstract_Text>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Abstract> tbl_Abstracts
		{
			get
			{
				return this.GetTable<tbl_Abstract>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_abstract_status_tt")]
		public ISingleResult<select_abstract_status_ttResult> select_abstract_status_tt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="Int")] System.Nullable<int> abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<select_abstract_status_ttResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.KappaUserIdentify_Insert_ByTeamID")]
		public int KappaUserIdentify_Insert_ByTeamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_abstracts_group_tt")]
		public ISingleResult<select_abstracts_group_ttResult> select_abstracts_group_tt()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<select_abstracts_group_ttResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_abstracts_no_reopen_tt")]
		public ISingleResult<select_abstracts_no_reopen_ttResult> select_abstracts_no_reopen_tt()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<select_abstracts_no_reopen_ttResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_abstracts_coding_tt")]
		public ISingleResult<select_abstracts_coding_ttResult> select_abstracts_coding_tt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractStatusID", DbType="Int")] System.Nullable<int> abstractStatusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractStatusID);
			return ((ISingleResult<select_abstracts_coding_ttResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.select_abstractId_team_member_tt")]
		public ISingleResult<select_abstractId_team_member_ttResult> select_abstractId_team_member_tt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<select_abstractId_team_member_ttResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_AbstractStatusTrail")]
		public ISingleResult<rpt_AbstractStatusTrailResult> rpt_AbstractStatusTrail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_AbstractStatusTrailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[rpt_Cdr_ODP IndividualCoding]")]
		public ISingleResult<rpt_Cdr_ODP_IndividualCodingResult> rpt_Cdr_ODP_IndividualCoding([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_Cdr_ODP_IndividualCodingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_KappaData")]
		public ISingleResult<rpt_KappaDataResult> rpt_KappaData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_KappaDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_Team_User_UC")]
		public ISingleResult<rpt_Team_User_UCResult> rpt_Team_User_UC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_Team_User_UCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_OPA")]
		public ISingleResult<rpt_OPAResult> rpt_OPA([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_OPAResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_Cdr_ODPNotesPDF")]
		public ISingleResult<rpt_Cdr_ODPNotesPDFResult> rpt_Cdr_ODPNotesPDF([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Domain", DbType="VarChar(150)")] string domain)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID, domain);
			return ((ISingleResult<rpt_Cdr_ODPNotesPDFResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.start_abstract_coding_tt")]
		public int start_abstract_coding_tt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="Int")] ref System.Nullable<int> abstractID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EvaluationId", DbType="Int")] ref System.Nullable<int> evaluationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAbstractTaken", DbType="Bit")] ref System.Nullable<bool> isAbstractTaken, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAbstractAvailable", DbType="Bit")] ref System.Nullable<bool> isAbstractAvailable)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamID, userID, abstractID, evaluationId, isAbstractTaken, isAbstractAvailable);
			abstractID = ((System.Nullable<int>)(result.GetParameterValue(2)));
			evaluationId = ((System.Nullable<int>)(result.GetParameterValue(3)));
			isAbstractTaken = ((System.Nullable<bool>)(result.GetParameterValue(4)));
			isAbstractAvailable = ((System.Nullable<bool>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.start_evaluation_odp_tt")]
		public int start_evaluation_odp_tt([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="Int")] System.Nullable<int> abstractID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EvaluationId", DbType="Int")] ref System.Nullable<int> evaluationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAbstractTaken", DbType="Bit")] ref System.Nullable<bool> isAbstractTaken)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamID, userID, abstractID, evaluationId, isAbstractTaken);
			evaluationId = ((System.Nullable<int>)(result.GetParameterValue(3)));
			isAbstractTaken = ((System.Nullable<bool>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rpt_AbstractExported")]
		public ISingleResult<rpt_AbstractExportedResult> rpt_AbstractExported([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AbstractID", DbType="VarChar(MAX)")] string abstractID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), abstractID);
			return ((ISingleResult<rpt_AbstractExportedResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class tbl_aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private string _UserFirstName;
		
		private string _UserLastName;
		
		private EntitySet<tbl_aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<tbl_aspnet_Membership> _tbl_aspnet_Membership;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    partial void OnUserFirstNameChanging(string value);
    partial void OnUserFirstNameChanged();
    partial void OnUserLastNameChanging(string value);
    partial void OnUserLastNameChanged();
    #endregion
		
		public tbl_aspnet_User()
		{
			this._aspnet_UsersInRoles = new EntitySet<tbl_aspnet_UsersInRole>(new Action<tbl_aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<tbl_aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._tbl_aspnet_Membership = default(EntityRef<tbl_aspnet_Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFirstName", DbType="NVarChar(50)")]
		public string UserFirstName
		{
			get
			{
				return this._UserFirstName;
			}
			set
			{
				if ((this._UserFirstName != value))
				{
					this.OnUserFirstNameChanging(value);
					this.SendPropertyChanging();
					this._UserFirstName = value;
					this.SendPropertyChanged("UserFirstName");
					this.OnUserFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLastName", DbType="NVarChar(50)")]
		public string UserLastName
		{
			get
			{
				return this._UserLastName;
			}
			set
			{
				if ((this._UserLastName != value))
				{
					this.OnUserLastNameChanging(value);
					this.SendPropertyChanging();
					this._UserLastName = value;
					this.SendPropertyChanged("UserLastName");
					this.OnUserLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_User_tbl_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<tbl_aspnet_UsersInRole> tbl_aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_User_tbl_aspnet_Membership", Storage="_tbl_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public tbl_aspnet_Membership tbl_aspnet_Membership
		{
			get
			{
				return this._tbl_aspnet_Membership.Entity;
			}
			set
			{
				tbl_aspnet_Membership previousValue = this._tbl_aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._tbl_aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_aspnet_Membership.Entity = null;
						previousValue.tbl_aspnet_User = null;
					}
					this._tbl_aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.tbl_aspnet_User = this;
					}
					this.SendPropertyChanged("tbl_aspnet_Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(tbl_aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.tbl_aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(tbl_aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.tbl_aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class tbl_aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<tbl_aspnet_User> _aspnet_User;
		
		private EntityRef<tbl_aspnet_Role> _tbl_aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public tbl_aspnet_UsersInRole()
		{
			this._aspnet_User = default(EntityRef<tbl_aspnet_User>);
			this._tbl_aspnet_Role = default(EntityRef<tbl_aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._tbl_aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_User_tbl_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public tbl_aspnet_User tbl_aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				tbl_aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.tbl_aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.tbl_aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("tbl_aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_Role_tbl_aspnet_UsersInRole", Storage="_tbl_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public tbl_aspnet_Role tbl_aspnet_Role
		{
			get
			{
				return this._tbl_aspnet_Role.Entity;
			}
			set
			{
				tbl_aspnet_Role previousValue = this._tbl_aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._tbl_aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_aspnet_Role.Entity = null;
						previousValue.tbl_aspnet_UsersInRoles.Remove(this);
					}
					this._tbl_aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.tbl_aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("tbl_aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamType")]
	public partial class tbl_TeamType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamTypeID;
		
		private string _TeamType1;
		
		private EntitySet<tbl_Team> _tbl_Teams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamTypeIDChanging(int value);
    partial void OnTeamTypeIDChanged();
    partial void OnTeamType1Changing(string value);
    partial void OnTeamType1Changed();
    #endregion
		
		public tbl_TeamType()
		{
			this._tbl_Teams = new EntitySet<tbl_Team>(new Action<tbl_Team>(this.attach_tbl_Teams), new Action<tbl_Team>(this.detach_tbl_Teams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamTypeID
		{
			get
			{
				return this._TeamTypeID;
			}
			set
			{
				if ((this._TeamTypeID != value))
				{
					this.OnTeamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TeamTypeID = value;
					this.SendPropertyChanged("TeamTypeID");
					this.OnTeamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TeamType", Storage="_TeamType1", DbType="NVarChar(10)")]
		public string TeamType1
		{
			get
			{
				return this._TeamType1;
			}
			set
			{
				if ((this._TeamType1 != value))
				{
					this.OnTeamType1Changing(value);
					this.SendPropertyChanging();
					this._TeamType1 = value;
					this.SendPropertyChanged("TeamType1");
					this.OnTeamType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TeamType_tbl_Team", Storage="_tbl_Teams", ThisKey="TeamTypeID", OtherKey="TeamTypeID")]
		public EntitySet<tbl_Team> tbl_Teams
		{
			get
			{
				return this._tbl_Teams;
			}
			set
			{
				this._tbl_Teams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Teams(tbl_Team entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TeamType = this;
		}
		
		private void detach_tbl_Teams(tbl_Team entity)
		{
			this.SendPropertyChanging();
			entity.tbl_TeamType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamUser")]
	public partial class tbl_TeamUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamID;
		
		private System.Guid _UserId;
		
		private EntityRef<tbl_Team> _tbl_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    #endregion
		
		public tbl_TeamUser()
		{
			this._tbl_Team = default(EntityRef<tbl_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._tbl_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Team_tbl_TeamUser", Storage="_tbl_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true)]
		public tbl_Team tbl_Team
		{
			get
			{
				return this._tbl_Team.Entity;
			}
			set
			{
				tbl_Team previousValue = this._tbl_Team.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Team.Entity = null;
						previousValue.tbl_TeamUsers.Remove(this);
					}
					this._tbl_Team.Entity = value;
					if ((value != null))
					{
						value.tbl_TeamUsers.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(int);
					}
					this.SendPropertyChanged("tbl_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class tbl_Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Status1;
		
		private EntitySet<tbl_A_StudyFocus> _A_StudyFocus;
		
		private EntitySet<tbL_Submission> _Submissions;
		
		private EntitySet<tbL_Submission> _tbl_Submissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatus1Changing(string value);
    partial void OnStatus1Changed();
    #endregion
		
		public tbl_Status()
		{
			this._A_StudyFocus = new EntitySet<tbl_A_StudyFocus>(new Action<tbl_A_StudyFocus>(this.attach_A_StudyFocus), new Action<tbl_A_StudyFocus>(this.detach_A_StudyFocus));
			this._Submissions = new EntitySet<tbL_Submission>(new Action<tbL_Submission>(this.attach_Submissions), new Action<tbL_Submission>(this.detach_Submissions));
			this._tbl_Submissions = new EntitySet<tbL_Submission>(new Action<tbL_Submission>(this.attach_tbl_Submissions), new Action<tbL_Submission>(this.detach_tbl_Submissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Status", Storage="_Status1", DbType="VarChar(20)")]
		public string Status1
		{
			get
			{
				return this._Status1;
			}
			set
			{
				if ((this._Status1 != value))
				{
					this.OnStatus1Changing(value);
					this.SendPropertyChanging();
					this._Status1 = value;
					this.SendPropertyChanged("Status1");
					this.OnStatus1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbl_A_StudyFocus", Storage="_A_StudyFocus", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<tbl_A_StudyFocus> tbl_A_StudyFocus
		{
			get
			{
				return this._A_StudyFocus;
			}
			set
			{
				this._A_StudyFocus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbL_Submission", Storage="_Submissions", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<tbL_Submission> Submissions
		{
			get
			{
				return this._Submissions;
			}
			set
			{
				this._Submissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbL_Submission1", Storage="_tbl_Submissions", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<tbL_Submission> tbL_Submissions
		{
			get
			{
				return this._tbl_Submissions;
			}
			set
			{
				this._tbl_Submissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_A_StudyFocus(tbl_A_StudyFocus entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = this;
		}
		
		private void detach_A_StudyFocus(tbl_A_StudyFocus entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = null;
		}
		
		private void attach_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = this;
		}
		
		private void detach_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status = null;
		}
		
		private void attach_tbl_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status1 = this;
		}
		
		private void detach_tbl_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Status1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class tbl_aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<tbl_aspnet_User> _tbl_aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public tbl_aspnet_Membership()
		{
			this._tbl_aspnet_User = default(EntityRef<tbl_aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._tbl_aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_User_tbl_aspnet_Membership", Storage="_tbl_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public tbl_aspnet_User tbl_aspnet_User
		{
			get
			{
				return this._tbl_aspnet_User.Entity;
			}
			set
			{
				tbl_aspnet_User previousValue = this._tbl_aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_aspnet_User.Entity = null;
						previousValue.tbl_aspnet_Membership = null;
					}
					this._tbl_aspnet_User.Entity = value;
					if ((value != null))
					{
						value.tbl_aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("tbl_aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class tbl_Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamID;
		
		private string _TeamCode;
		
		private System.Nullable<int> _TeamTypeID;
		
		private int _StatusID;
		
		private System.Nullable<System.DateTime> _CreatedDateTime;
		
		private System.Nullable<System.Guid> _Createdby;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDateTime;
		
		private EntitySet<tbl_TeamUser> _tbl_TeamUsers;
		
		private EntitySet<tbl_Evaluation> _tbl_Evaluations;
		
		private EntityRef<tbl_TeamType> _tbl_TeamType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnTeamCodeChanging(string value);
    partial void OnTeamCodeChanged();
    partial void OnTeamTypeIDChanging(System.Nullable<int> value);
    partial void OnTeamTypeIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnCreatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateTimeChanged();
    partial void OnCreatedbyChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedbyChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public tbl_Team()
		{
			this._tbl_TeamUsers = new EntitySet<tbl_TeamUser>(new Action<tbl_TeamUser>(this.attach_tbl_TeamUsers), new Action<tbl_TeamUser>(this.detach_tbl_TeamUsers));
			this._tbl_Evaluations = new EntitySet<tbl_Evaluation>(new Action<tbl_Evaluation>(this.attach_tbl_Evaluations), new Action<tbl_Evaluation>(this.detach_tbl_Evaluations));
			this._tbl_TeamType = default(EntityRef<tbl_TeamType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamCode", DbType="NVarChar(50)")]
		public string TeamCode
		{
			get
			{
				return this._TeamCode;
			}
			set
			{
				if ((this._TeamCode != value))
				{
					this.OnTeamCodeChanging(value);
					this.SendPropertyChanging();
					this._TeamCode = value;
					this.SendPropertyChanged("TeamCode");
					this.OnTeamCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamTypeID", DbType="Int")]
		public System.Nullable<int> TeamTypeID
		{
			get
			{
				return this._TeamTypeID;
			}
			set
			{
				if ((this._TeamTypeID != value))
				{
					if (this._tbl_TeamType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TeamTypeID = value;
					this.SendPropertyChanged("TeamTypeID");
					this.OnTeamTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Createdby", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Createdby
		{
			get
			{
				return this._Createdby;
			}
			set
			{
				if ((this._Createdby != value))
				{
					this.OnCreatedbyChanging(value);
					this.SendPropertyChanging();
					this._Createdby = value;
					this.SendPropertyChanged("Createdby");
					this.OnCreatedbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Team_tbl_TeamUser", Storage="_tbl_TeamUsers", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<tbl_TeamUser> tbl_TeamUsers
		{
			get
			{
				return this._tbl_TeamUsers;
			}
			set
			{
				this._tbl_TeamUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Team_tbl_Evaluation", Storage="_tbl_Evaluations", ThisKey="TeamID", OtherKey="TeamID")]
		public EntitySet<tbl_Evaluation> tbl_Evaluations
		{
			get
			{
				return this._tbl_Evaluations;
			}
			set
			{
				this._tbl_Evaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_TeamType_tbl_Team", Storage="_tbl_TeamType", ThisKey="TeamTypeID", OtherKey="TeamTypeID", IsForeignKey=true)]
		public tbl_TeamType tbl_TeamType
		{
			get
			{
				return this._tbl_TeamType.Entity;
			}
			set
			{
				tbl_TeamType previousValue = this._tbl_TeamType.Entity;
				if (((previousValue != value) 
							|| (this._tbl_TeamType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_TeamType.Entity = null;
						previousValue.tbl_Teams.Remove(this);
					}
					this._tbl_TeamType.Entity = value;
					if ((value != null))
					{
						value.tbl_Teams.Add(this);
						this._TeamTypeID = value.TeamTypeID;
					}
					else
					{
						this._TeamTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_TeamType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_TeamUsers(tbl_TeamUser entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Team = this;
		}
		
		private void detach_tbl_TeamUsers(tbl_TeamUser entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Team = null;
		}
		
		private void attach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Team = this;
		}
		
		private void detach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluation")]
	public partial class tbl_Evaluation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EvaluationId;
		
		private System.Nullable<System.Guid> _ConsensusStartedBy;
		
		private System.Nullable<int> _TeamID;
		
		private System.Nullable<int> _AbstractID;
		
		private bool _IsComplete;
		
		private System.Nullable<System.DateTime> _DateTimeStarted;
		
		private System.Nullable<System.DateTime> _DateTimeEnded;
		
		private System.Nullable<short> _EvaluationTypeId;
		
		private bool _IsStopped;
		
		private System.Nullable<System.Guid> _StoppedBy;
		
		private System.Nullable<System.DateTime> _StoppedDateTime;
		
		private EntitySet<tbl_AbstractScan> _tbl_AbstractScans;
		
		private EntitySet<tbl_AbstractStatusChangeHistory> _AbstractStatusChangeHistories;
		
		private EntitySet<tbl_AbstractStatusChangeHistory> _tbl_AbstractStatusChangeHistories;
		
		private EntitySet<tbL_Submission> _tbl_Submissions;
		
		private EntityRef<tbl_Team> _tbl_Team;
		
		private EntityRef<tbl_EvaluationType> _tbl_EvaluationType;
		
		private EntityRef<tbl_Abstract> _Abstract;
		
		private EntityRef<tbl_Abstract> _tbl_Abstract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationIdChanging(int value);
    partial void OnEvaluationIdChanged();
    partial void OnConsensusStartedByChanging(System.Nullable<System.Guid> value);
    partial void OnConsensusStartedByChanged();
    partial void OnTeamIDChanging(System.Nullable<int> value);
    partial void OnTeamIDChanged();
    partial void OnAbstractIDChanging(System.Nullable<int> value);
    partial void OnAbstractIDChanged();
    partial void OnIsCompleteChanging(bool value);
    partial void OnIsCompleteChanged();
    partial void OnDateTimeStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeStartedChanged();
    partial void OnDateTimeEndedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeEndedChanged();
    partial void OnEvaluationTypeIdChanging(System.Nullable<short> value);
    partial void OnEvaluationTypeIdChanged();
    partial void OnIsStoppedChanging(bool value);
    partial void OnIsStoppedChanged();
    partial void OnStoppedByChanging(System.Nullable<System.Guid> value);
    partial void OnStoppedByChanged();
    partial void OnStoppedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStoppedDateTimeChanged();
    #endregion
		
		public tbl_Evaluation()
		{
			this._tbl_AbstractScans = new EntitySet<tbl_AbstractScan>(new Action<tbl_AbstractScan>(this.attach_tbl_AbstractScans), new Action<tbl_AbstractScan>(this.detach_tbl_AbstractScans));
			this._AbstractStatusChangeHistories = new EntitySet<tbl_AbstractStatusChangeHistory>(new Action<tbl_AbstractStatusChangeHistory>(this.attach_AbstractStatusChangeHistories), new Action<tbl_AbstractStatusChangeHistory>(this.detach_AbstractStatusChangeHistories));
			this._tbl_AbstractStatusChangeHistories = new EntitySet<tbl_AbstractStatusChangeHistory>(new Action<tbl_AbstractStatusChangeHistory>(this.attach_tbl_AbstractStatusChangeHistories), new Action<tbl_AbstractStatusChangeHistory>(this.detach_tbl_AbstractStatusChangeHistories));
			this._tbl_Submissions = new EntitySet<tbL_Submission>(new Action<tbL_Submission>(this.attach_tbl_Submissions), new Action<tbL_Submission>(this.detach_tbl_Submissions));
			this._tbl_Team = default(EntityRef<tbl_Team>);
			this._tbl_EvaluationType = default(EntityRef<tbl_EvaluationType>);
			this._Abstract = default(EntityRef<tbl_Abstract>);
			this._tbl_Abstract = default(EntityRef<tbl_Abstract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsensusStartedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ConsensusStartedBy
		{
			get
			{
				return this._ConsensusStartedBy;
			}
			set
			{
				if ((this._ConsensusStartedBy != value))
				{
					this.OnConsensusStartedByChanging(value);
					this.SendPropertyChanging();
					this._ConsensusStartedBy = value;
					this.SendPropertyChanged("ConsensusStartedBy");
					this.OnConsensusStartedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int")]
		public System.Nullable<int> TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					if (this._tbl_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int")]
		public System.Nullable<int> AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					if ((this._Abstract.HasLoadedOrAssignedValue || this._tbl_Abstract.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAbstractIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractID = value;
					this.SendPropertyChanged("AbstractID");
					this.OnAbstractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsComplete", DbType="Bit NOT NULL")]
		public bool IsComplete
		{
			get
			{
				return this._IsComplete;
			}
			set
			{
				if ((this._IsComplete != value))
				{
					this.OnIsCompleteChanging(value);
					this.SendPropertyChanging();
					this._IsComplete = value;
					this.SendPropertyChanged("IsComplete");
					this.OnIsCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeStarted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeStarted
		{
			get
			{
				return this._DateTimeStarted;
			}
			set
			{
				if ((this._DateTimeStarted != value))
				{
					this.OnDateTimeStartedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeStarted = value;
					this.SendPropertyChanged("DateTimeStarted");
					this.OnDateTimeStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTimeEnded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTimeEnded
		{
			get
			{
				return this._DateTimeEnded;
			}
			set
			{
				if ((this._DateTimeEnded != value))
				{
					this.OnDateTimeEndedChanging(value);
					this.SendPropertyChanging();
					this._DateTimeEnded = value;
					this.SendPropertyChanged("DateTimeEnded");
					this.OnDateTimeEndedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTypeId", DbType="SmallInt")]
		public System.Nullable<short> EvaluationTypeId
		{
			get
			{
				return this._EvaluationTypeId;
			}
			set
			{
				if ((this._EvaluationTypeId != value))
				{
					if (this._tbl_EvaluationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTypeId = value;
					this.SendPropertyChanged("EvaluationTypeId");
					this.OnEvaluationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStopped", DbType="Bit NOT NULL")]
		public bool IsStopped
		{
			get
			{
				return this._IsStopped;
			}
			set
			{
				if ((this._IsStopped != value))
				{
					this.OnIsStoppedChanging(value);
					this.SendPropertyChanging();
					this._IsStopped = value;
					this.SendPropertyChanged("IsStopped");
					this.OnIsStoppedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoppedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StoppedBy
		{
			get
			{
				return this._StoppedBy;
			}
			set
			{
				if ((this._StoppedBy != value))
				{
					this.OnStoppedByChanging(value);
					this.SendPropertyChanging();
					this._StoppedBy = value;
					this.SendPropertyChanged("StoppedBy");
					this.OnStoppedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoppedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StoppedDateTime
		{
			get
			{
				return this._StoppedDateTime;
			}
			set
			{
				if ((this._StoppedDateTime != value))
				{
					this.OnStoppedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StoppedDateTime = value;
					this.SendPropertyChanged("StoppedDateTime");
					this.OnStoppedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractScan", Storage="_tbl_AbstractScans", ThisKey="EvaluationId", OtherKey="EvaluationId")]
		public EntitySet<tbl_AbstractScan> tbl_AbstractScans
		{
			get
			{
				return this._tbl_AbstractScans;
			}
			set
			{
				this._tbl_AbstractScans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractStatusChangeHistory", Storage="_AbstractStatusChangeHistories", ThisKey="EvaluationId", OtherKey="EvaluationId")]
		public EntitySet<tbl_AbstractStatusChangeHistory> AbstractStatusChangeHistories
		{
			get
			{
				return this._AbstractStatusChangeHistories;
			}
			set
			{
				this._AbstractStatusChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractStatusChangeHistory1", Storage="_tbl_AbstractStatusChangeHistories", ThisKey="EvaluationId", OtherKey="EvaluationId")]
		public EntitySet<tbl_AbstractStatusChangeHistory> tbl_AbstractStatusChangeHistories
		{
			get
			{
				return this._tbl_AbstractStatusChangeHistories;
			}
			set
			{
				this._tbl_AbstractStatusChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbL_Submission", Storage="_tbl_Submissions", ThisKey="EvaluationId", OtherKey="EvaluationId")]
		public EntitySet<tbL_Submission> tbL_Submissions
		{
			get
			{
				return this._tbl_Submissions;
			}
			set
			{
				this._tbl_Submissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Team_tbl_Evaluation", Storage="_tbl_Team", ThisKey="TeamID", OtherKey="TeamID", IsForeignKey=true)]
		public tbl_Team tbl_Team
		{
			get
			{
				return this._tbl_Team.Entity;
			}
			set
			{
				tbl_Team previousValue = this._tbl_Team.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Team.Entity = null;
						previousValue.tbl_Evaluations.Remove(this);
					}
					this._tbl_Team.Entity = value;
					if ((value != null))
					{
						value.tbl_Evaluations.Add(this);
						this._TeamID = value.TeamID;
					}
					else
					{
						this._TeamID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_EvaluationType_tbl_Evaluation", Storage="_tbl_EvaluationType", ThisKey="EvaluationTypeId", OtherKey="EvaluationTypeId", IsForeignKey=true)]
		public tbl_EvaluationType tbl_EvaluationType
		{
			get
			{
				return this._tbl_EvaluationType.Entity;
			}
			set
			{
				tbl_EvaluationType previousValue = this._tbl_EvaluationType.Entity;
				if (((previousValue != value) 
							|| (this._tbl_EvaluationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_EvaluationType.Entity = null;
						previousValue.tbl_Evaluations.Remove(this);
					}
					this._tbl_EvaluationType.Entity = value;
					if ((value != null))
					{
						value.tbl_Evaluations.Add(this);
						this._EvaluationTypeId = value.EvaluationTypeId;
					}
					else
					{
						this._EvaluationTypeId = default(Nullable<short>);
					}
					this.SendPropertyChanged("tbl_EvaluationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Evaluation", Storage="_Abstract", ThisKey="AbstractID", OtherKey="AbstractID", IsForeignKey=true)]
		public tbl_Abstract Abstract
		{
			get
			{
				return this._Abstract.Entity;
			}
			set
			{
				tbl_Abstract previousValue = this._Abstract.Entity;
				if (((previousValue != value) 
							|| (this._Abstract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Abstract.Entity = null;
						previousValue.tbl_Evaluations.Remove(this);
					}
					this._Abstract.Entity = value;
					if ((value != null))
					{
						value.tbl_Evaluations.Add(this);
						this._AbstractID = value.AbstractID;
					}
					else
					{
						this._AbstractID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Abstract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Evaluation1", Storage="_tbl_Abstract", ThisKey="AbstractID", OtherKey="AbstractID", IsForeignKey=true)]
		public tbl_Abstract tbl_Abstract
		{
			get
			{
				return this._tbl_Abstract.Entity;
			}
			set
			{
				tbl_Abstract previousValue = this._tbl_Abstract.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Abstract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Abstract.Entity = null;
						previousValue.tbl_Evaluations1.Remove(this);
					}
					this._tbl_Abstract.Entity = value;
					if ((value != null))
					{
						value.tbl_Evaluations1.Add(this);
						this._AbstractID = value.AbstractID;
					}
					else
					{
						this._AbstractID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Abstract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_AbstractScans(tbl_AbstractScan entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = this;
		}
		
		private void detach_tbl_AbstractScans(tbl_AbstractScan entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = null;
		}
		
		private void attach_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = this;
		}
		
		private void detach_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = null;
		}
		
		private void attach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation1 = this;
		}
		
		private void detach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation1 = null;
		}
		
		private void attach_tbl_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = this;
		}
		
		private void detach_tbl_Submissions(tbL_Submission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Evaluation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbstractStatus")]
	public partial class tbl_AbstractStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractStatusID;
		
		private string _AbstractStatusCode;
		
		private string _AbstractStatusDescription;
		
		private System.Nullable<int> _StatusID;
		
		private EntitySet<tbl_AbstractStatusChangeHistory> _tbl_AbstractStatusChangeHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractStatusIDChanging(int value);
    partial void OnAbstractStatusIDChanged();
    partial void OnAbstractStatusCodeChanging(string value);
    partial void OnAbstractStatusCodeChanged();
    partial void OnAbstractStatusDescriptionChanging(string value);
    partial void OnAbstractStatusDescriptionChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public tbl_AbstractStatus()
		{
			this._tbl_AbstractStatusChangeHistories = new EntitySet<tbl_AbstractStatusChangeHistory>(new Action<tbl_AbstractStatusChangeHistory>(this.attach_tbl_AbstractStatusChangeHistories), new Action<tbl_AbstractStatusChangeHistory>(this.detach_tbl_AbstractStatusChangeHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AbstractStatusID
		{
			get
			{
				return this._AbstractStatusID;
			}
			set
			{
				if ((this._AbstractStatusID != value))
				{
					this.OnAbstractStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractStatusID = value;
					this.SendPropertyChanged("AbstractStatusID");
					this.OnAbstractStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AbstractStatusCode
		{
			get
			{
				return this._AbstractStatusCode;
			}
			set
			{
				if ((this._AbstractStatusCode != value))
				{
					this.OnAbstractStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._AbstractStatusCode = value;
					this.SendPropertyChanged("AbstractStatusCode");
					this.OnAbstractStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusDescription", DbType="NVarChar(255)")]
		public string AbstractStatusDescription
		{
			get
			{
				return this._AbstractStatusDescription;
			}
			set
			{
				if ((this._AbstractStatusDescription != value))
				{
					this.OnAbstractStatusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AbstractStatusDescription = value;
					this.SendPropertyChanged("AbstractStatusDescription");
					this.OnAbstractStatusDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_AbstractStatus_tbl_AbstractStatusChangeHistory", Storage="_tbl_AbstractStatusChangeHistories", ThisKey="AbstractStatusID", OtherKey="AbstractStatusID")]
		public EntitySet<tbl_AbstractStatusChangeHistory> tbl_AbstractStatusChangeHistories
		{
			get
			{
				return this._tbl_AbstractStatusChangeHistories;
			}
			set
			{
				this._tbl_AbstractStatusChangeHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_AbstractStatus = this;
		}
		
		private void detach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_AbstractStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbstractScan")]
	public partial class tbl_AbstractScan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractScanID;
		
		private int _EvaluationId;
		
		private string _FileName;
		
		private System.Nullable<System.Guid> _UploadedBy;
		
		private System.Nullable<System.DateTime> _UploadedDateTime;
		
		private EntityRef<tbl_Evaluation> _tbl_Evaluation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractScanIDChanging(int value);
    partial void OnAbstractScanIDChanged();
    partial void OnEvaluationIdChanging(int value);
    partial void OnEvaluationIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnUploadedByChanging(System.Nullable<System.Guid> value);
    partial void OnUploadedByChanged();
    partial void OnUploadedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadedDateTimeChanged();
    #endregion
		
		public tbl_AbstractScan()
		{
			this._tbl_Evaluation = default(EntityRef<tbl_Evaluation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractScanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AbstractScanID
		{
			get
			{
				return this._AbstractScanID;
			}
			set
			{
				if ((this._AbstractScanID != value))
				{
					this.OnAbstractScanIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractScanID = value;
					this.SendPropertyChanged("AbstractScanID");
					this.OnAbstractScanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", DbType="Int NOT NULL")]
		public int EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					if (this._tbl_Evaluation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UploadedBy
		{
			get
			{
				return this._UploadedBy;
			}
			set
			{
				if ((this._UploadedBy != value))
				{
					this.OnUploadedByChanging(value);
					this.SendPropertyChanging();
					this._UploadedBy = value;
					this.SendPropertyChanged("UploadedBy");
					this.OnUploadedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadedDateTime
		{
			get
			{
				return this._UploadedDateTime;
			}
			set
			{
				if ((this._UploadedDateTime != value))
				{
					this.OnUploadedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UploadedDateTime = value;
					this.SendPropertyChanged("UploadedDateTime");
					this.OnUploadedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractScan", Storage="_tbl_Evaluation", ThisKey="EvaluationId", OtherKey="EvaluationId", IsForeignKey=true)]
		public tbl_Evaluation tbl_Evaluation
		{
			get
			{
				return this._tbl_Evaluation.Entity;
			}
			set
			{
				tbl_Evaluation previousValue = this._tbl_Evaluation.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Evaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Evaluation.Entity = null;
						previousValue.tbl_AbstractScans.Remove(this);
					}
					this._tbl_Evaluation.Entity = value;
					if ((value != null))
					{
						value.tbl_AbstractScans.Add(this);
						this._EvaluationId = value.EvaluationId;
					}
					else
					{
						this._EvaluationId = default(int);
					}
					this.SendPropertyChanged("tbl_Evaluation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbstractStatusChangeHistory")]
	public partial class tbl_AbstractStatusChangeHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractStatusChangeHistoryID;
		
		private int _AbstractID;
		
		private System.Nullable<int> _EvaluationId;
		
		private int _AbstractStatusID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.Guid> _CreatedBy;
		
		private EntityRef<tbl_AbstractStatus> _tbl_AbstractStatus;
		
		private EntityRef<tbl_Evaluation> _tbl_Evaluation;
		
		private EntityRef<tbl_Evaluation> _tbl_Evaluation1;
		
		private EntityRef<tbl_Abstract> _tbl_Abstract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractStatusChangeHistoryIDChanging(int value);
    partial void OnAbstractStatusChangeHistoryIDChanged();
    partial void OnAbstractIDChanging(int value);
    partial void OnAbstractIDChanged();
    partial void OnEvaluationIdChanging(System.Nullable<int> value);
    partial void OnEvaluationIdChanged();
    partial void OnAbstractStatusIDChanging(int value);
    partial void OnAbstractStatusIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(System.Nullable<System.Guid> value);
    partial void OnCreatedByChanged();
    #endregion
		
		public tbl_AbstractStatusChangeHistory()
		{
			this._tbl_AbstractStatus = default(EntityRef<tbl_AbstractStatus>);
			this._tbl_Evaluation = default(EntityRef<tbl_Evaluation>);
			this._tbl_Evaluation1 = default(EntityRef<tbl_Evaluation>);
			this._tbl_Abstract = default(EntityRef<tbl_Abstract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusChangeHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AbstractStatusChangeHistoryID
		{
			get
			{
				return this._AbstractStatusChangeHistoryID;
			}
			set
			{
				if ((this._AbstractStatusChangeHistoryID != value))
				{
					this.OnAbstractStatusChangeHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractStatusChangeHistoryID = value;
					this.SendPropertyChanged("AbstractStatusChangeHistoryID");
					this.OnAbstractStatusChangeHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int NOT NULL")]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					if (this._tbl_Abstract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAbstractIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractID = value;
					this.SendPropertyChanged("AbstractID");
					this.OnAbstractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", DbType="Int")]
		public System.Nullable<int> EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					if ((this._tbl_Evaluation.HasLoadedOrAssignedValue || this._tbl_Evaluation1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusID", DbType="Int NOT NULL")]
		public int AbstractStatusID
		{
			get
			{
				return this._AbstractStatusID;
			}
			set
			{
				if ((this._AbstractStatusID != value))
				{
					if (this._tbl_AbstractStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAbstractStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractStatusID = value;
					this.SendPropertyChanged("AbstractStatusID");
					this.OnAbstractStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_AbstractStatus_tbl_AbstractStatusChangeHistory", Storage="_tbl_AbstractStatus", ThisKey="AbstractStatusID", OtherKey="AbstractStatusID", IsForeignKey=true)]
		public tbl_AbstractStatus tbl_AbstractStatus
		{
			get
			{
				return this._tbl_AbstractStatus.Entity;
			}
			set
			{
				tbl_AbstractStatus previousValue = this._tbl_AbstractStatus.Entity;
				if (((previousValue != value) 
							|| (this._tbl_AbstractStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_AbstractStatus.Entity = null;
						previousValue.tbl_AbstractStatusChangeHistories.Remove(this);
					}
					this._tbl_AbstractStatus.Entity = value;
					if ((value != null))
					{
						value.tbl_AbstractStatusChangeHistories.Add(this);
						this._AbstractStatusID = value.AbstractStatusID;
					}
					else
					{
						this._AbstractStatusID = default(int);
					}
					this.SendPropertyChanged("tbl_AbstractStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractStatusChangeHistory", Storage="_tbl_Evaluation", ThisKey="EvaluationId", OtherKey="EvaluationId", IsForeignKey=true)]
		public tbl_Evaluation tbl_Evaluation
		{
			get
			{
				return this._tbl_Evaluation.Entity;
			}
			set
			{
				tbl_Evaluation previousValue = this._tbl_Evaluation.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Evaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Evaluation.Entity = null;
						previousValue.AbstractStatusChangeHistories.Remove(this);
					}
					this._tbl_Evaluation.Entity = value;
					if ((value != null))
					{
						value.AbstractStatusChangeHistories.Add(this);
						this._EvaluationId = value.EvaluationId;
					}
					else
					{
						this._EvaluationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Evaluation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbl_AbstractStatusChangeHistory1", Storage="_tbl_Evaluation1", ThisKey="EvaluationId", OtherKey="EvaluationId", IsForeignKey=true)]
		public tbl_Evaluation tbl_Evaluation1
		{
			get
			{
				return this._tbl_Evaluation1.Entity;
			}
			set
			{
				tbl_Evaluation previousValue = this._tbl_Evaluation1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Evaluation1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Evaluation1.Entity = null;
						previousValue.tbl_AbstractStatusChangeHistories.Remove(this);
					}
					this._tbl_Evaluation1.Entity = value;
					if ((value != null))
					{
						value.tbl_AbstractStatusChangeHistories.Add(this);
						this._EvaluationId = value.EvaluationId;
					}
					else
					{
						this._EvaluationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Evaluation1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_AbstractStatusChangeHistory", Storage="_tbl_Abstract", ThisKey="AbstractID", OtherKey="AbstractID", IsForeignKey=true)]
		public tbl_Abstract tbl_Abstract
		{
			get
			{
				return this._tbl_Abstract.Entity;
			}
			set
			{
				tbl_Abstract previousValue = this._tbl_Abstract.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Abstract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Abstract.Entity = null;
						previousValue.tbl_AbstractStatusChangeHistories.Remove(this);
					}
					this._tbl_Abstract.Entity = value;
					if ((value != null))
					{
						value.tbl_AbstractStatusChangeHistories.Add(this);
						this._AbstractID = value.AbstractID;
					}
					else
					{
						this._AbstractID = default(int);
					}
					this.SendPropertyChanged("tbl_Abstract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbstractTopic")]
	public partial class tbl_AbstractTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractID;
		
		private int _StudyFocusID;
		
		private EntityRef<tbl_A_StudyFocus> _A_StudyFocus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractIDChanging(int value);
    partial void OnAbstractIDChanged();
    partial void OnStudyFocusIDChanging(int value);
    partial void OnStudyFocusIDChanged();
    #endregion
		
		public tbl_AbstractTopic()
		{
			this._A_StudyFocus = default(EntityRef<tbl_A_StudyFocus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					this.OnAbstractIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractID = value;
					this.SendPropertyChanged("AbstractID");
					this.OnAbstractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyFocusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudyFocusID
		{
			get
			{
				return this._StudyFocusID;
			}
			set
			{
				if ((this._StudyFocusID != value))
				{
					if (this._A_StudyFocus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudyFocusIDChanging(value);
					this.SendPropertyChanging();
					this._StudyFocusID = value;
					this.SendPropertyChanged("StudyFocusID");
					this.OnStudyFocusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_A_StudyFocus_tbl_AbstractTopic", Storage="_A_StudyFocus", ThisKey="StudyFocusID", OtherKey="StudyFocusID", IsForeignKey=true)]
		public tbl_A_StudyFocus tbl_A_StudyFocus
		{
			get
			{
				return this._A_StudyFocus.Entity;
			}
			set
			{
				tbl_A_StudyFocus previousValue = this._A_StudyFocus.Entity;
				if (((previousValue != value) 
							|| (this._A_StudyFocus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._A_StudyFocus.Entity = null;
						previousValue.tbl_AbstractTopics.Remove(this);
					}
					this._A_StudyFocus.Entity = value;
					if ((value != null))
					{
						value.tbl_AbstractTopics.Add(this);
						this._StudyFocusID = value.StudyFocusID;
					}
					else
					{
						this._StudyFocusID = default(int);
					}
					this.SendPropertyChanged("tbl_A_StudyFocus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationType")]
	public abstract partial class tbl_EvaluationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _EvaluationTypeId;
		
		private string _EvaluationType1;
		
		private EntitySet<tbl_Evaluation> _tbl_Evaluations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvaluationTypeIdChanging(short value);
    partial void OnEvaluationTypeIdChanged();
    partial void OnEvaluationType1Changing(string value);
    partial void OnEvaluationType1Changed();
    #endregion
		
		public tbl_EvaluationType()
		{
			this._tbl_Evaluations = new EntitySet<tbl_Evaluation>(new Action<tbl_Evaluation>(this.attach_tbl_Evaluations), new Action<tbl_Evaluation>(this.detach_tbl_Evaluations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationTypeId", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short EvaluationTypeId
		{
			get
			{
				return this._EvaluationTypeId;
			}
			set
			{
				if ((this._EvaluationTypeId != value))
				{
					this.OnEvaluationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationTypeId = value;
					this.SendPropertyChanged("EvaluationTypeId");
					this.OnEvaluationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EvaluationType", Storage="_EvaluationType1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EvaluationType1
		{
			get
			{
				return this._EvaluationType1;
			}
			set
			{
				if ((this._EvaluationType1 != value))
				{
					this.OnEvaluationType1Changing(value);
					this.SendPropertyChanging();
					this._EvaluationType1 = value;
					this.SendPropertyChanged("EvaluationType1");
					this.OnEvaluationType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_EvaluationType_tbl_Evaluation", Storage="_tbl_Evaluations", ThisKey="EvaluationTypeId", OtherKey="EvaluationTypeId")]
		public EntitySet<tbl_Evaluation> tbl_Evaluations
		{
			get
			{
				return this._tbl_Evaluations;
			}
			set
			{
				this._tbl_Evaluations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_EvaluationType = this;
		}
		
		private void detach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_EvaluationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.A_StudyFocus")]
	public partial class tbl_A_StudyFocus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudyFocusID;
		
		private string _StudyFocus;
		
		private bool _A1_IsEnabled;
		
		private bool _A2_IsEnabled;
		
		private bool _A3_IsEnabled;
		
		private System.Nullable<int> _Sort;
		
		private System.Nullable<int> _AbstractStudyFocusSort;
		
		private bool _ShowAsAbstractTopic;
		
		private System.Nullable<int> _StatusID;
		
		private EntitySet<tbl_AbstractTopic> _tbl_AbstractTopics;
		
		private EntityRef<tbl_Status> _tbl_Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudyFocusIDChanging(int value);
    partial void OnStudyFocusIDChanged();
    partial void OnStudyFocusChanging(string value);
    partial void OnStudyFocusChanged();
    partial void OnA1_IsEnabledChanging(bool value);
    partial void OnA1_IsEnabledChanged();
    partial void OnA2_IsEnabledChanging(bool value);
    partial void OnA2_IsEnabledChanged();
    partial void OnA3_IsEnabledChanging(bool value);
    partial void OnA3_IsEnabledChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnAbstractStudyFocusSortChanging(System.Nullable<int> value);
    partial void OnAbstractStudyFocusSortChanged();
    partial void OnShowAsAbstractTopicChanging(bool value);
    partial void OnShowAsAbstractTopicChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    #endregion
		
		public tbl_A_StudyFocus()
		{
			this._tbl_AbstractTopics = new EntitySet<tbl_AbstractTopic>(new Action<tbl_AbstractTopic>(this.attach_tbl_AbstractTopics), new Action<tbl_AbstractTopic>(this.detach_tbl_AbstractTopics));
			this._tbl_Status = default(EntityRef<tbl_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyFocusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StudyFocusID
		{
			get
			{
				return this._StudyFocusID;
			}
			set
			{
				if ((this._StudyFocusID != value))
				{
					this.OnStudyFocusIDChanging(value);
					this.SendPropertyChanging();
					this._StudyFocusID = value;
					this.SendPropertyChanged("StudyFocusID");
					this.OnStudyFocusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyFocus", DbType="NVarChar(255)")]
		public string StudyFocus
		{
			get
			{
				return this._StudyFocus;
			}
			set
			{
				if ((this._StudyFocus != value))
				{
					this.OnStudyFocusChanging(value);
					this.SendPropertyChanging();
					this._StudyFocus = value;
					this.SendPropertyChanged("StudyFocus");
					this.OnStudyFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1_IsEnabled", DbType="Bit NOT NULL")]
		public bool A1_IsEnabled
		{
			get
			{
				return this._A1_IsEnabled;
			}
			set
			{
				if ((this._A1_IsEnabled != value))
				{
					this.OnA1_IsEnabledChanging(value);
					this.SendPropertyChanging();
					this._A1_IsEnabled = value;
					this.SendPropertyChanged("A1_IsEnabled");
					this.OnA1_IsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2_IsEnabled", DbType="Bit NOT NULL")]
		public bool A2_IsEnabled
		{
			get
			{
				return this._A2_IsEnabled;
			}
			set
			{
				if ((this._A2_IsEnabled != value))
				{
					this.OnA2_IsEnabledChanging(value);
					this.SendPropertyChanging();
					this._A2_IsEnabled = value;
					this.SendPropertyChanged("A2_IsEnabled");
					this.OnA2_IsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A3_IsEnabled", DbType="Bit NOT NULL")]
		public bool A3_IsEnabled
		{
			get
			{
				return this._A3_IsEnabled;
			}
			set
			{
				if ((this._A3_IsEnabled != value))
				{
					this.OnA3_IsEnabledChanging(value);
					this.SendPropertyChanging();
					this._A3_IsEnabled = value;
					this.SendPropertyChanged("A3_IsEnabled");
					this.OnA3_IsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
		public System.Nullable<int> Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStudyFocusSort", DbType="Int")]
		public System.Nullable<int> AbstractStudyFocusSort
		{
			get
			{
				return this._AbstractStudyFocusSort;
			}
			set
			{
				if ((this._AbstractStudyFocusSort != value))
				{
					this.OnAbstractStudyFocusSortChanging(value);
					this.SendPropertyChanging();
					this._AbstractStudyFocusSort = value;
					this.SendPropertyChanged("AbstractStudyFocusSort");
					this.OnAbstractStudyFocusSortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAsAbstractTopic", DbType="Bit NOT NULL")]
		public bool ShowAsAbstractTopic
		{
			get
			{
				return this._ShowAsAbstractTopic;
			}
			set
			{
				if ((this._ShowAsAbstractTopic != value))
				{
					this.OnShowAsAbstractTopicChanging(value);
					this.SendPropertyChanging();
					this._ShowAsAbstractTopic = value;
					this.SendPropertyChanged("ShowAsAbstractTopic");
					this.OnShowAsAbstractTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._tbl_Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_A_StudyFocus_tbl_AbstractTopic", Storage="_tbl_AbstractTopics", ThisKey="StudyFocusID", OtherKey="StudyFocusID")]
		public EntitySet<tbl_AbstractTopic> tbl_AbstractTopics
		{
			get
			{
				return this._tbl_AbstractTopics;
			}
			set
			{
				this._tbl_AbstractTopics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbl_A_StudyFocus", Storage="_tbl_Status", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public tbl_Status tbl_Status
		{
			get
			{
				return this._tbl_Status.Entity;
			}
			set
			{
				tbl_Status previousValue = this._tbl_Status.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Status.Entity = null;
						previousValue.tbl_A_StudyFocus.Remove(this);
					}
					this._tbl_Status.Entity = value;
					if ((value != null))
					{
						value.tbl_A_StudyFocus.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_AbstractTopics(tbl_AbstractTopic entity)
		{
			this.SendPropertyChanging();
			entity.tbl_A_StudyFocus = this;
		}
		
		private void detach_tbl_AbstractTopics(tbl_AbstractTopic entity)
		{
			this.SendPropertyChanging();
			entity.tbl_A_StudyFocus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Submission")]
	public partial class tbL_Submission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubmissionID;
		
		private System.Nullable<int> _EvaluationId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Nullable<short> _SubmissionTypeId;
		
		private string _Comments;
		
		private bool _UnableToCode;
		
		private System.Nullable<System.Guid> _ApproveSupervisorUserID;
		
		private System.Nullable<System.DateTime> _SubmissionDateTime;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<System.Guid> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private EntityRef<tbl_Evaluation> _tbl_Evaluation;
		
		private EntityRef<tbl_Status> _tbl_Status;
		
		private EntityRef<tbl_Status> _tbl_Status1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubmissionIDChanging(int value);
    partial void OnSubmissionIDChanged();
    partial void OnEvaluationIdChanging(System.Nullable<int> value);
    partial void OnEvaluationIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnSubmissionTypeIdChanging(System.Nullable<short> value);
    partial void OnSubmissionTypeIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnUnableToCodeChanging(bool value);
    partial void OnUnableToCodeChanged();
    partial void OnApproveSupervisorUserIDChanging(System.Nullable<System.Guid> value);
    partial void OnApproveSupervisorUserIDChanged();
    partial void OnSubmissionDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmissionDateTimeChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public tbL_Submission()
		{
			this._tbl_Evaluation = default(EntityRef<tbl_Evaluation>);
			this._tbl_Status = default(EntityRef<tbl_Status>);
			this._tbl_Status1 = default(EntityRef<tbl_Status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubmissionID
		{
			get
			{
				return this._SubmissionID;
			}
			set
			{
				if ((this._SubmissionID != value))
				{
					this.OnSubmissionIDChanging(value);
					this.SendPropertyChanging();
					this._SubmissionID = value;
					this.SendPropertyChanged("SubmissionID");
					this.OnSubmissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationId", DbType="Int")]
		public System.Nullable<int> EvaluationId
		{
			get
			{
				return this._EvaluationId;
			}
			set
			{
				if ((this._EvaluationId != value))
				{
					if (this._tbl_Evaluation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEvaluationIdChanging(value);
					this.SendPropertyChanging();
					this._EvaluationId = value;
					this.SendPropertyChanged("EvaluationId");
					this.OnEvaluationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionTypeId", DbType="SmallInt")]
		public System.Nullable<short> SubmissionTypeId
		{
			get
			{
				return this._SubmissionTypeId;
			}
			set
			{
				if ((this._SubmissionTypeId != value))
				{
					this.OnSubmissionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SubmissionTypeId = value;
					this.SendPropertyChanged("SubmissionTypeId");
					this.OnSubmissionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnableToCode", DbType="Bit NOT NULL")]
		public bool UnableToCode
		{
			get
			{
				return this._UnableToCode;
			}
			set
			{
				if ((this._UnableToCode != value))
				{
					this.OnUnableToCodeChanging(value);
					this.SendPropertyChanging();
					this._UnableToCode = value;
					this.SendPropertyChanged("UnableToCode");
					this.OnUnableToCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveSupervisorUserID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApproveSupervisorUserID
		{
			get
			{
				return this._ApproveSupervisorUserID;
			}
			set
			{
				if ((this._ApproveSupervisorUserID != value))
				{
					this.OnApproveSupervisorUserIDChanging(value);
					this.SendPropertyChanging();
					this._ApproveSupervisorUserID = value;
					this.SendPropertyChanged("ApproveSupervisorUserID");
					this.OnApproveSupervisorUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> SubmissionDateTime
		{
			get
			{
				return this._SubmissionDateTime;
			}
			set
			{
				if ((this._SubmissionDateTime != value))
				{
					this.OnSubmissionDateTimeChanging(value);
					this.SendPropertyChanging();
					this._SubmissionDateTime = value;
					this.SendPropertyChanged("SubmissionDateTime");
					this.OnSubmissionDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if ((this._tbl_Status.HasLoadedOrAssignedValue || this._tbl_Status1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Evaluation_tbL_Submission", Storage="_tbl_Evaluation", ThisKey="EvaluationId", OtherKey="EvaluationId", IsForeignKey=true)]
		public tbl_Evaluation tbl_Evaluation
		{
			get
			{
				return this._tbl_Evaluation.Entity;
			}
			set
			{
				tbl_Evaluation previousValue = this._tbl_Evaluation.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Evaluation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Evaluation.Entity = null;
						previousValue.tbL_Submissions.Remove(this);
					}
					this._tbl_Evaluation.Entity = value;
					if ((value != null))
					{
						value.tbL_Submissions.Add(this);
						this._EvaluationId = value.EvaluationId;
					}
					else
					{
						this._EvaluationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Evaluation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbL_Submission", Storage="_tbl_Status", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public tbl_Status tbl_Status
		{
			get
			{
				return this._tbl_Status.Entity;
			}
			set
			{
				tbl_Status previousValue = this._tbl_Status.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Status.Entity = null;
						previousValue.Submissions.Remove(this);
					}
					this._tbl_Status.Entity = value;
					if ((value != null))
					{
						value.Submissions.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Status_tbL_Submission1", Storage="_tbl_Status1", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public tbl_Status tbl_Status1
		{
			get
			{
				return this._tbl_Status1.Entity;
			}
			set
			{
				tbl_Status previousValue = this._tbl_Status1.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Status1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Status1.Entity = null;
						previousValue.tbL_Submissions.Remove(this);
					}
					this._tbl_Status1.Entity = value;
					if ((value != null))
					{
						value.tbL_Submissions.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Status1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class tbl_aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private string _DisplayRoleName;
		
		private EntitySet<tbl_aspnet_UsersInRole> _tbl_aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayRoleNameChanging(string value);
    partial void OnDisplayRoleNameChanged();
    #endregion
		
		public tbl_aspnet_Role()
		{
			this._tbl_aspnet_UsersInRoles = new EntitySet<tbl_aspnet_UsersInRole>(new Action<tbl_aspnet_UsersInRole>(this.attach_tbl_aspnet_UsersInRoles), new Action<tbl_aspnet_UsersInRole>(this.detach_tbl_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayRoleName", DbType="NVarChar(256)")]
		public string DisplayRoleName
		{
			get
			{
				return this._DisplayRoleName;
			}
			set
			{
				if ((this._DisplayRoleName != value))
				{
					this.OnDisplayRoleNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayRoleName = value;
					this.SendPropertyChanged("DisplayRoleName");
					this.OnDisplayRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_aspnet_Role_tbl_aspnet_UsersInRole", Storage="_tbl_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<tbl_aspnet_UsersInRole> tbl_aspnet_UsersInRoles
		{
			get
			{
				return this._tbl_aspnet_UsersInRoles;
			}
			set
			{
				this._tbl_aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_aspnet_UsersInRoles(tbl_aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.tbl_aspnet_Role = this;
		}
		
		private void detach_tbl_aspnet_UsersInRoles(tbl_aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.tbl_aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abstract_Text")]
	public partial class tbl_Abstract_Text : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractID;
		
		private string _Abstract;
		
		private string _AbstractDescPart;
		
		private string _AbstractNIHPart;
		
		private string _AbstractProjTermPart;
		
		private string _AbstractPublicHeathPart;
		
		private EntityRef<tbl_Abstract> _tbl_Abstract;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractIDChanging(int value);
    partial void OnAbstractIDChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnAbstractDescPartChanging(string value);
    partial void OnAbstractDescPartChanged();
    partial void OnAbstractNIHPartChanging(string value);
    partial void OnAbstractNIHPartChanged();
    partial void OnAbstractProjTermPartChanging(string value);
    partial void OnAbstractProjTermPartChanged();
    partial void OnAbstractPublicHeathPartChanging(string value);
    partial void OnAbstractPublicHeathPartChanged();
    #endregion
		
		public tbl_Abstract_Text()
		{
			this._tbl_Abstract = default(EntityRef<tbl_Abstract>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					if (this._tbl_Abstract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAbstractIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractID = value;
					this.SendPropertyChanged("AbstractID");
					this.OnAbstractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstract", DbType="NVarChar(MAX)")]
		public string Abstract
		{
			get
			{
				return this._Abstract;
			}
			set
			{
				if ((this._Abstract != value))
				{
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractDescPart", DbType="NVarChar(MAX)")]
		public string AbstractDescPart
		{
			get
			{
				return this._AbstractDescPart;
			}
			set
			{
				if ((this._AbstractDescPart != value))
				{
					this.OnAbstractDescPartChanging(value);
					this.SendPropertyChanging();
					this._AbstractDescPart = value;
					this.SendPropertyChanged("AbstractDescPart");
					this.OnAbstractDescPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractNIHPart", DbType="NVarChar(MAX)")]
		public string AbstractNIHPart
		{
			get
			{
				return this._AbstractNIHPart;
			}
			set
			{
				if ((this._AbstractNIHPart != value))
				{
					this.OnAbstractNIHPartChanging(value);
					this.SendPropertyChanging();
					this._AbstractNIHPart = value;
					this.SendPropertyChanged("AbstractNIHPart");
					this.OnAbstractNIHPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractProjTermPart", DbType="NVarChar(MAX)")]
		public string AbstractProjTermPart
		{
			get
			{
				return this._AbstractProjTermPart;
			}
			set
			{
				if ((this._AbstractProjTermPart != value))
				{
					this.OnAbstractProjTermPartChanging(value);
					this.SendPropertyChanging();
					this._AbstractProjTermPart = value;
					this.SendPropertyChanged("AbstractProjTermPart");
					this.OnAbstractProjTermPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractPublicHeathPart", DbType="NVarChar(MAX)")]
		public string AbstractPublicHeathPart
		{
			get
			{
				return this._AbstractPublicHeathPart;
			}
			set
			{
				if ((this._AbstractPublicHeathPart != value))
				{
					this.OnAbstractPublicHeathPartChanging(value);
					this.SendPropertyChanging();
					this._AbstractPublicHeathPart = value;
					this.SendPropertyChanged("AbstractPublicHeathPart");
					this.OnAbstractPublicHeathPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Abstract_Text", Storage="_tbl_Abstract", ThisKey="AbstractID", OtherKey="AbstractID", IsForeignKey=true)]
		public tbl_Abstract tbl_Abstract
		{
			get
			{
				return this._tbl_Abstract.Entity;
			}
			set
			{
				tbl_Abstract previousValue = this._tbl_Abstract.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Abstract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Abstract.Entity = null;
						previousValue.tbl_Abstract_Text = null;
					}
					this._tbl_Abstract.Entity = value;
					if ((value != null))
					{
						value.tbl_Abstract_Text = this;
						this._AbstractID = value.AbstractID;
					}
					else
					{
						this._AbstractID = default(int);
					}
					this.SendPropertyChanged("tbl_Abstract");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abstract")]
	public partial class tbl_Abstract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AbstractID;
		
		private string _AdministeringIC;
		
		private string _ProjectTitle;
		
		private System.Nullable<int> _ApplicationID;
		
		private string _Activity;
		
		private string _ProjectNumber;
		
		private System.Nullable<int> _Type;
		
		private string _IC;
		
		private System.Nullable<int> _SerialNumber;
		
		private System.Nullable<int> _SupportYear;
		
		private string _Suffix;
		
		private string _PIProjectLeader;
		
		private string _FY;
		
		private string _ChrApplicationID;
		
		private string _NoPreventionFlag;
		
		private string _SubSet;
		
		private string _CodingType;
		
		private System.Nullable<System.DateTime> _LastExportDate;
		
		private EntitySet<tbl_Evaluation> _tbl_Evaluations;
		
		private EntitySet<tbl_Evaluation> _tbl_Evaluations1;
		
		private EntitySet<tbl_AbstractStatusChangeHistory> _tbl_AbstractStatusChangeHistories;
		
		private EntityRef<tbl_Abstract_Text> _tbl_Abstract_Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAbstractIDChanging(int value);
    partial void OnAbstractIDChanged();
    partial void OnAdministeringICChanging(string value);
    partial void OnAdministeringICChanged();
    partial void OnProjectTitleChanging(string value);
    partial void OnProjectTitleChanged();
    partial void OnApplicationIDChanging(System.Nullable<int> value);
    partial void OnApplicationIDChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnProjectNumberChanging(string value);
    partial void OnProjectNumberChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnICChanging(string value);
    partial void OnICChanged();
    partial void OnSerialNumberChanging(System.Nullable<int> value);
    partial void OnSerialNumberChanged();
    partial void OnSupportYearChanging(System.Nullable<int> value);
    partial void OnSupportYearChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnPIProjectLeaderChanging(string value);
    partial void OnPIProjectLeaderChanged();
    partial void OnFYChanging(string value);
    partial void OnFYChanged();
    partial void OnChrApplicationIDChanging(string value);
    partial void OnChrApplicationIDChanged();
    partial void OnNoPreventionFlagChanging(string value);
    partial void OnNoPreventionFlagChanged();
    partial void OnSubSetChanging(string value);
    partial void OnSubSetChanged();
    partial void OnCodingTypeChanging(string value);
    partial void OnCodingTypeChanged();
    partial void OnLastExportDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastExportDateChanged();
    #endregion
		
		public tbl_Abstract()
		{
			this._tbl_Evaluations = new EntitySet<tbl_Evaluation>(new Action<tbl_Evaluation>(this.attach_tbl_Evaluations), new Action<tbl_Evaluation>(this.detach_tbl_Evaluations));
			this._tbl_Evaluations1 = new EntitySet<tbl_Evaluation>(new Action<tbl_Evaluation>(this.attach_tbl_Evaluations1), new Action<tbl_Evaluation>(this.detach_tbl_Evaluations1));
			this._tbl_AbstractStatusChangeHistories = new EntitySet<tbl_AbstractStatusChangeHistory>(new Action<tbl_AbstractStatusChangeHistory>(this.attach_tbl_AbstractStatusChangeHistories), new Action<tbl_AbstractStatusChangeHistory>(this.detach_tbl_AbstractStatusChangeHistories));
			this._tbl_Abstract_Text = default(EntityRef<tbl_Abstract_Text>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					this.OnAbstractIDChanging(value);
					this.SendPropertyChanging();
					this._AbstractID = value;
					this.SendPropertyChanged("AbstractID");
					this.OnAbstractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdministeringIC", DbType="NVarChar(20)")]
		public string AdministeringIC
		{
			get
			{
				return this._AdministeringIC;
			}
			set
			{
				if ((this._AdministeringIC != value))
				{
					this.OnAdministeringICChanging(value);
					this.SendPropertyChanging();
					this._AdministeringIC = value;
					this.SendPropertyChanged("AdministeringIC");
					this.OnAdministeringICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this.OnProjectTitleChanging(value);
					this.SendPropertyChanging();
					this._ProjectTitle = value;
					this.SendPropertyChanged("ProjectTitle");
					this.OnProjectTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(20)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNumber", DbType="NVarChar(255)")]
		public string ProjectNumber
		{
			get
			{
				return this._ProjectNumber;
			}
			set
			{
				if ((this._ProjectNumber != value))
				{
					this.OnProjectNumberChanging(value);
					this.SendPropertyChanging();
					this._ProjectNumber = value;
					this.SendPropertyChanged("ProjectNumber");
					this.OnProjectNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IC", DbType="NVarChar(20)")]
		public string IC
		{
			get
			{
				return this._IC;
			}
			set
			{
				if ((this._IC != value))
				{
					this.OnICChanging(value);
					this.SendPropertyChanging();
					this._IC = value;
					this.SendPropertyChanged("IC");
					this.OnICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="Int")]
		public System.Nullable<int> SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportYear", DbType="Int")]
		public System.Nullable<int> SupportYear
		{
			get
			{
				return this._SupportYear;
			}
			set
			{
				if ((this._SupportYear != value))
				{
					this.OnSupportYearChanging(value);
					this.SendPropertyChanging();
					this._SupportYear = value;
					this.SendPropertyChanged("SupportYear");
					this.OnSupportYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(255)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this.OnPIProjectLeaderChanging(value);
					this.SendPropertyChanging();
					this._PIProjectLeader = value;
					this.SendPropertyChanged("PIProjectLeader");
					this.OnPIProjectLeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FY", DbType="NVarChar(20)")]
		public string FY
		{
			get
			{
				return this._FY;
			}
			set
			{
				if ((this._FY != value))
				{
					this.OnFYChanging(value);
					this.SendPropertyChanging();
					this._FY = value;
					this.SendPropertyChanged("FY");
					this.OnFYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChrApplicationID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ChrApplicationID
		{
			get
			{
				return this._ChrApplicationID;
			}
			set
			{
				if ((this._ChrApplicationID != value))
				{
					this.OnChrApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ChrApplicationID = value;
					this.SendPropertyChanged("ChrApplicationID");
					this.OnChrApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPreventionFlag", DbType="NVarChar(20)")]
		public string NoPreventionFlag
		{
			get
			{
				return this._NoPreventionFlag;
			}
			set
			{
				if ((this._NoPreventionFlag != value))
				{
					this.OnNoPreventionFlagChanging(value);
					this.SendPropertyChanging();
					this._NoPreventionFlag = value;
					this.SendPropertyChanged("NoPreventionFlag");
					this.OnNoPreventionFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSet", DbType="NVarChar(100)")]
		public string SubSet
		{
			get
			{
				return this._SubSet;
			}
			set
			{
				if ((this._SubSet != value))
				{
					this.OnSubSetChanging(value);
					this.SendPropertyChanging();
					this._SubSet = value;
					this.SendPropertyChanged("SubSet");
					this.OnSubSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodingType", DbType="NVarChar(20)")]
		public string CodingType
		{
			get
			{
				return this._CodingType;
			}
			set
			{
				if ((this._CodingType != value))
				{
					this.OnCodingTypeChanging(value);
					this.SendPropertyChanging();
					this._CodingType = value;
					this.SendPropertyChanged("CodingType");
					this.OnCodingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastExportDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastExportDate
		{
			get
			{
				return this._LastExportDate;
			}
			set
			{
				if ((this._LastExportDate != value))
				{
					this.OnLastExportDateChanging(value);
					this.SendPropertyChanging();
					this._LastExportDate = value;
					this.SendPropertyChanged("LastExportDate");
					this.OnLastExportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Evaluation", Storage="_tbl_Evaluations", ThisKey="AbstractID", OtherKey="AbstractID")]
		public EntitySet<tbl_Evaluation> tbl_Evaluations
		{
			get
			{
				return this._tbl_Evaluations;
			}
			set
			{
				this._tbl_Evaluations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Evaluation1", Storage="_tbl_Evaluations1", ThisKey="AbstractID", OtherKey="AbstractID")]
		public EntitySet<tbl_Evaluation> tbl_Evaluations1
		{
			get
			{
				return this._tbl_Evaluations1;
			}
			set
			{
				this._tbl_Evaluations1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_AbstractStatusChangeHistory", Storage="_tbl_AbstractStatusChangeHistories", ThisKey="AbstractID", OtherKey="AbstractID")]
		public EntitySet<tbl_AbstractStatusChangeHistory> tbl_AbstractStatusChangeHistories
		{
			get
			{
				return this._tbl_AbstractStatusChangeHistories;
			}
			set
			{
				this._tbl_AbstractStatusChangeHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Abstract_tbl_Abstract_Text", Storage="_tbl_Abstract_Text", ThisKey="AbstractID", OtherKey="AbstractID", IsUnique=true, IsForeignKey=false)]
		public tbl_Abstract_Text tbl_Abstract_Text
		{
			get
			{
				return this._tbl_Abstract_Text.Entity;
			}
			set
			{
				tbl_Abstract_Text previousValue = this._tbl_Abstract_Text.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Abstract_Text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Abstract_Text.Entity = null;
						previousValue.tbl_Abstract = null;
					}
					this._tbl_Abstract_Text.Entity = value;
					if ((value != null))
					{
						value.tbl_Abstract = this;
					}
					this.SendPropertyChanged("tbl_Abstract_Text");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.Abstract = this;
		}
		
		private void detach_tbl_Evaluations(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.Abstract = null;
		}
		
		private void attach_tbl_Evaluations1(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Abstract = this;
		}
		
		private void detach_tbl_Evaluations1(tbl_Evaluation entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Abstract = null;
		}
		
		private void attach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Abstract = this;
		}
		
		private void detach_tbl_AbstractStatusChangeHistories(tbl_AbstractStatusChangeHistory entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Abstract = null;
		}
	}
	
	public partial class select_abstract_status_ttResult
	{
		
		private int _AbstractStatusID;
		
		public select_abstract_status_ttResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusID", DbType="Int NOT NULL")]
		public int AbstractStatusID
		{
			get
			{
				return this._AbstractStatusID;
			}
			set
			{
				if ((this._AbstractStatusID != value))
				{
					this._AbstractStatusID = value;
				}
			}
		}
	}
	
	public partial class select_abstracts_group_ttResult
	{
		
		private int _CategoryID;
		
		private System.Nullable<int> _Sorting;
		
		public select_abstracts_group_ttResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sorting", DbType="Int")]
		public System.Nullable<int> Sorting
		{
			get
			{
				return this._Sorting;
			}
			set
			{
				if ((this._Sorting != value))
				{
					this._Sorting = value;
				}
			}
		}
	}
	
	public partial class select_abstracts_no_reopen_ttResult
	{
		
		private int _AbstractID;
		
		public select_abstracts_no_reopen_ttResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int NOT NULL")]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					this._AbstractID = value;
				}
			}
		}
	}
	
	public partial class select_abstracts_coding_ttResult
	{
		
		private int _AbstractID;
		
		public select_abstracts_coding_ttResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int NOT NULL")]
		public int AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					this._AbstractID = value;
				}
			}
		}
	}
	
	public partial class select_abstractId_team_member_ttResult
	{
		
		private System.Nullable<int> _AbstractID;
		
		private string _ProjectTitle;
		
		public select_abstractId_team_member_ttResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractID", DbType="Int")]
		public System.Nullable<int> AbstractID
		{
			get
			{
				return this._AbstractID;
			}
			set
			{
				if ((this._AbstractID != value))
				{
					this._AbstractID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
	}
	
	public partial class rpt_AbstractStatusTrailResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _PIProjectLeader;
		
		private string _ProjectTitle;
		
		private string _AbstractStatusCode;
		
		private string _AbstractStatusDescription;
		
		private System.Nullable<System.DateTime> _Date;
		
		public rpt_AbstractStatusTrailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AbstractStatusCode
		{
			get
			{
				return this._AbstractStatusCode;
			}
			set
			{
				if ((this._AbstractStatusCode != value))
				{
					this._AbstractStatusCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractStatusDescription", DbType="NVarChar(255)")]
		public string AbstractStatusDescription
		{
			get
			{
				return this._AbstractStatusDescription;
			}
			set
			{
				if ((this._AbstractStatusDescription != value))
				{
					this._AbstractStatusDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class rpt_Cdr_ODP_IndividualCodingResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _PIProjectLeader;
		
		private string _ProjectTitle;
		
		private string _MainSection;
		
		private string _SubSection;
		
		private int _SectionID;
		
		private string _SectionName;
		
		private System.Nullable<short> _CdrA;
		
		private System.Nullable<short> _CdrB;
		
		private System.Nullable<short> _CdrC;
		
		private System.Nullable<short> _CdrConsensus;
		
		private System.Nullable<short> _ODPA;
		
		private System.Nullable<short> _ODPB;
		
		private System.Nullable<short> _ODPC;
		
		private System.Nullable<short> _ODPConsensus;
		
		private System.Nullable<short> _ConsensusReconciled;
		
		private System.Nullable<short> _Final_Consensus;
		
		public rpt_Cdr_ODP_IndividualCodingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSection", DbType="NVarChar(255)")]
		public string MainSection
		{
			get
			{
				return this._MainSection;
			}
			set
			{
				if ((this._MainSection != value))
				{
					this._MainSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSection", DbType="NVarChar(255)")]
		public string SubSection
		{
			get
			{
				return this._SubSection;
			}
			set
			{
				if ((this._SubSection != value))
				{
					this._SubSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionID", DbType="Int NOT NULL")]
		public int SectionID
		{
			get
			{
				return this._SectionID;
			}
			set
			{
				if ((this._SectionID != value))
				{
					this._SectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(255)")]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this._SectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CdrA", DbType="SmallInt")]
		public System.Nullable<short> CdrA
		{
			get
			{
				return this._CdrA;
			}
			set
			{
				if ((this._CdrA != value))
				{
					this._CdrA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CdrB", DbType="SmallInt")]
		public System.Nullable<short> CdrB
		{
			get
			{
				return this._CdrB;
			}
			set
			{
				if ((this._CdrB != value))
				{
					this._CdrB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CdrC", DbType="SmallInt")]
		public System.Nullable<short> CdrC
		{
			get
			{
				return this._CdrC;
			}
			set
			{
				if ((this._CdrC != value))
				{
					this._CdrC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CdrConsensus", DbType="SmallInt")]
		public System.Nullable<short> CdrConsensus
		{
			get
			{
				return this._CdrConsensus;
			}
			set
			{
				if ((this._CdrConsensus != value))
				{
					this._CdrConsensus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODPA", DbType="SmallInt")]
		public System.Nullable<short> ODPA
		{
			get
			{
				return this._ODPA;
			}
			set
			{
				if ((this._ODPA != value))
				{
					this._ODPA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODPB", DbType="SmallInt")]
		public System.Nullable<short> ODPB
		{
			get
			{
				return this._ODPB;
			}
			set
			{
				if ((this._ODPB != value))
				{
					this._ODPB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODPC", DbType="SmallInt")]
		public System.Nullable<short> ODPC
		{
			get
			{
				return this._ODPC;
			}
			set
			{
				if ((this._ODPC != value))
				{
					this._ODPC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODPConsensus", DbType="SmallInt")]
		public System.Nullable<short> ODPConsensus
		{
			get
			{
				return this._ODPConsensus;
			}
			set
			{
				if ((this._ODPConsensus != value))
				{
					this._ODPConsensus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsensusReconciled", DbType="SmallInt")]
		public System.Nullable<short> ConsensusReconciled
		{
			get
			{
				return this._ConsensusReconciled;
			}
			set
			{
				if ((this._ConsensusReconciled != value))
				{
					this._ConsensusReconciled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Final Consensus]", Storage="_Final_Consensus", DbType="SmallInt")]
		public System.Nullable<short> Final_Consensus
		{
			get
			{
				return this._Final_Consensus;
			}
			set
			{
				if ((this._Final_Consensus != value))
				{
					this._Final_Consensus = value;
				}
			}
		}
	}
	
	public partial class rpt_KappaDataResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _UserName;
		
		private string _PIProjectLeader;
		
		private string _ProjectTitle;
		
		private string _KappaType;
		
		private System.Nullable<decimal> _A1;
		
		private System.Nullable<decimal> _A2;
		
		private System.Nullable<decimal> _A3;
		
		private System.Nullable<decimal> _B;
		
		private System.Nullable<decimal> _C;
		
		private System.Nullable<decimal> _D;
		
		private System.Nullable<decimal> _E;
		
		private System.Nullable<decimal> _F;
		
		private System.Nullable<System.DateTime> _CdrKappaDate;
		
		private System.Nullable<System.DateTime> _ODPKappaDate;
		
		public rpt_KappaDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(10)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KappaType", DbType="NVarChar(50)")]
		public string KappaType
		{
			get
			{
				return this._KappaType;
			}
			set
			{
				if ((this._KappaType != value))
				{
					this._KappaType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A1", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> A1
		{
			get
			{
				return this._A1;
			}
			set
			{
				if ((this._A1 != value))
				{
					this._A1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A2", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> A2
		{
			get
			{
				return this._A2;
			}
			set
			{
				if ((this._A2 != value))
				{
					this._A2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A3", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> A3
		{
			get
			{
				return this._A3;
			}
			set
			{
				if ((this._A3 != value))
				{
					this._A3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this._B = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this._C = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this._D = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> E
		{
			get
			{
				return this._E;
			}
			set
			{
				if ((this._E != value))
				{
					this._E = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> F
		{
			get
			{
				return this._F;
			}
			set
			{
				if ((this._F != value))
				{
					this._F = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CdrKappaDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CdrKappaDate
		{
			get
			{
				return this._CdrKappaDate;
			}
			set
			{
				if ((this._CdrKappaDate != value))
				{
					this._CdrKappaDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ODPKappaDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ODPKappaDate
		{
			get
			{
				return this._ODPKappaDate;
			}
			set
			{
				if ((this._ODPKappaDate != value))
				{
					this._ODPKappaDate = value;
				}
			}
		}
	}
	
	public partial class rpt_Team_User_UCResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _PIProjectLeader;
		
		private string _ProjectTitle;
		
		private string _TeamCode;
		
		private string _TeamType;
		
		private string _UserAlias;
		
		private string _UserName;
		
		private string _SubmissionType;
		
		private bool _UnableToCode;
		
		public rpt_Team_User_UCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamCode", DbType="NVarChar(50)")]
		public string TeamCode
		{
			get
			{
				return this._TeamCode;
			}
			set
			{
				if ((this._TeamCode != value))
				{
					this._TeamCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamType", DbType="NVarChar(10)")]
		public string TeamType
		{
			get
			{
				return this._TeamType;
			}
			set
			{
				if ((this._TeamType != value))
				{
					this._TeamType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAlias", DbType="NVarChar(50)")]
		public string UserAlias
		{
			get
			{
				return this._UserAlias;
			}
			set
			{
				if ((this._UserAlias != value))
				{
					this._UserAlias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionType", DbType="NVarChar(255)")]
		public string SubmissionType
		{
			get
			{
				return this._SubmissionType;
			}
			set
			{
				if ((this._SubmissionType != value))
				{
					this._SubmissionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnableToCode", DbType="Bit NOT NULL")]
		public bool UnableToCode
		{
			get
			{
				return this._UnableToCode;
			}
			set
			{
				if ((this._UnableToCode != value))
				{
					this._UnableToCode = value;
				}
			}
		}
	}
	
	public partial class rpt_OPAResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _PIProjectLeader;
		
		private string _MainSection;
		
		private string _SubSection;
		
		private string _SectionName;
		
		private System.Nullable<short> _Final_Consensus;
		
		public rpt_OPAResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSection", DbType="NVarChar(255)")]
		public string MainSection
		{
			get
			{
				return this._MainSection;
			}
			set
			{
				if ((this._MainSection != value))
				{
					this._MainSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSection", DbType="NVarChar(255)")]
		public string SubSection
		{
			get
			{
				return this._SubSection;
			}
			set
			{
				if ((this._SubSection != value))
				{
					this._SubSection = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SectionName", DbType="NVarChar(255)")]
		public string SectionName
		{
			get
			{
				return this._SectionName;
			}
			set
			{
				if ((this._SectionName != value))
				{
					this._SectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Final Consensus]", Storage="_Final_Consensus", DbType="SmallInt")]
		public System.Nullable<short> Final_Consensus
		{
			get
			{
				return this._Final_Consensus;
			}
			set
			{
				if ((this._Final_Consensus != value))
				{
					this._Final_Consensus = value;
				}
			}
		}
	}
	
	public partial class rpt_Cdr_ODPNotesPDFResult
	{
		
		private System.Nullable<int> _ApplicationID;
		
		private string _PIProjectLeader;
		
		private string _ProjectTitle;
		
		private string _FileName;
		
		private string _EvaluationType;
		
		public rpt_Cdr_ODPNotesPDFResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIProjectLeader", DbType="NVarChar(255)")]
		public string PIProjectLeader
		{
			get
			{
				return this._PIProjectLeader;
			}
			set
			{
				if ((this._PIProjectLeader != value))
				{
					this._PIProjectLeader = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProjectTitle
		{
			get
			{
				return this._ProjectTitle;
			}
			set
			{
				if ((this._ProjectTitle != value))
				{
					this._ProjectTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(393)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvaluationType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EvaluationType
		{
			get
			{
				return this._EvaluationType;
			}
			set
			{
				if ((this._EvaluationType != value))
				{
					this._EvaluationType = value;
				}
			}
		}
	}
	
	public partial class rpt_AbstractExportedResult
	{
		
		private System.Nullable<int> _ApplicationID_Data_exported;
		
		private string _Fiscal_Year;
		
		private System.DateTime _Exported_Date;
		
		public rpt_AbstractExportedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID_Data_exported", DbType="Int")]
		public System.Nullable<int> ApplicationID_Data_exported
		{
			get
			{
				return this._ApplicationID_Data_exported;
			}
			set
			{
				if ((this._ApplicationID_Data_exported != value))
				{
					this._ApplicationID_Data_exported = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fiscal_Year", DbType="NVarChar(20)")]
		public string Fiscal_Year
		{
			get
			{
				return this._Fiscal_Year;
			}
			set
			{
				if ((this._Fiscal_Year != value))
				{
					this._Fiscal_Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Exported Date]", Storage="_Exported_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Exported_Date
		{
			get
			{
				return this._Exported_Date;
			}
			set
			{
				if ((this._Exported_Date != value))
				{
					this._Exported_Date = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
